[project]
name = "web3cli"
version = "0.9.1"
description = "Interact with blockchains and smart contracts using the command line"
authors = [
    {name = "coccoinomane", email = "coccoinomane@gmail.com"},
]
readme = "README.md"
keywords = ["web3", "w3", "cli", "evm", "blockchain", "ethereum", "binance", "avalanche"]
license = {text = "MIT"}
requires-python = ">=3.7.2,<3.11"
dependencies = [
    "cement>=3.0.8",
    "cement[colorlog]>=3.0.8",
    "cement[jinja2]>=3.0.8",
    "cement[yaml]>=3.0.8",
    "cement[tabulate]>=3.0.8",
    "web3client>=0.4.4",
    "peewee>=3.15.3",
    "cryptography>=38.0.3",
    "ruamel.yaml>=0.17.21",
]

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=6.2.5",
    "mypy>=0.982",
    "eth-brownie>=1.19.2",
]

[tool.pdm.scripts]
w3.help = "Run the CLI in development mode"
w3.cmd = "w3"

test = "pytest tests"
test_verbose = "pytest tests -s"
test_fast = "pytest tests -m 'not slow'"

db_open = "open -a TablePlus $HOME/.web3cli/database/web3cli.sqlite"
db_clean = "rm -rf $HOME/.web3cli/database"

docker = "pdm run clean && docker build -t web3cli:latest ."

[project.scripts]
w3 = "web3cli.main:main"

[project.urls]
homepage = "https://github.com/coccoinomane/web3cli"
repository = "https://github.com/coccoinomane/web3cli"

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool.pdm.build]
includes = ["src"]

[tool.black]
line-length = 88

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
strict_optional = false
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
disallow_any_unimported = false
disallow_untyped_calls = true
exclude = [
    '__pypackages__',
]

[tool.pytest.ini_options]
filterwarnings = "ignore::DeprecationWarning"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "local: tests that require a local blockchain to be run, e.g. ganache or hardhat network (deselect with '-m \"not local\"')",
]
